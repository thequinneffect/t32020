#!/usr/bin/python3
# COMP3311 20T3 Ass3 ... get Name's biography/filmography

import sys
import psycopg2
#from helpers import whatever, functions, you, need

# define any local helper functions here

# set up some globals

usage = "Usage: bio 'NamePattern' [Year]"
db = None

# process command-line args

argc = len(sys.argv)
if (argc < 2):
  print(usage)
  exit(0)
title_regex = sys.argv[1]
year = '/^(\s*|\d+)$/' # allow number or null
if (argc == 3):
  if (not sys.argv[2].isdigit()):
    print(usage)
    exit(0)
  year = sys.argv[2]

# manipulate database

try:
  db = psycopg2.connect("dbname=imdb")
  cursor = db.cursor()
  get_people = """
  select * 
  from names
  where name ~* %s
  and birth_year::text ~* %s
  order by name, birth_year, id
  """
  cursor.execute(get_people, [title_regex, year])
  full_pattern = f"'{title_regex}'"
  if (year.isdigit()):
    full_pattern = full_pattern + f" {year}"
  if (cursor.rowcount == 0):
    print(f"No name matching {full_pattern}")
  elif (cursor.rowcount == 1):
    print("showing bio")
  else:
    print(f"Names matching {full_pattern}\n===============")
    for row in cursor.fetchall():
      id, name, birth, death = row
      print(f"id={id}, name={name}, birth={birth}, death={death}")
      if (birth is not None and death is not None):
        name = name + f" ({birth}-{death})"
      elif (death is not None):
        name = name + f" (-{death})"
      elif (birth is not None):
        name = name + f" ({birth}-)"
      else:
        name = name + " (???)"
      print(f"{name}")
except psycopg2.Error as err:
  print("DB error: ", err)
finally:
  if db:
    db.close()

