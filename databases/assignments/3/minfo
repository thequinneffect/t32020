#!/usr/bin/python3
# COMP3311 20T3 Ass3 ... print info about cast and crew for Movie

import sys
import psycopg2
#from helpers import whatever, functions, you, need

# define any local helper functions here

# set up some globals

usage = "Usage: minfo 'MovieTitlePattern' [Year]"
db = None

# process command-line args

argc = len(sys.argv)
if (argc < 2):
  print(usage)
  exit(0)
title_regex = sys.argv[1]
year = '\d'
if (argc == 3):
  if (not sys.argv[2].isdigit()):
    print(usage)
    exit(0)
  year = sys.argv[2]

# manipulate database

try:
  db = psycopg2.connect("dbname=imdb")
  cursor = db.cursor()
  get_movies = """
  select id, title, start_year
  from movies
  where title ~* %s
  and start_year::text ~ %s
  """
  cursor.execute(get_movies, [title_regex, year])
  if (cursor.rowcount == 0):
    print(f"No movie matching {title_regex}")
  elif (cursor.rowcount == 1):
    movie_id, title, start_year = cursor.fetchone()
    print(f"{title} ({start_year})\n===============")
    get_actors = """
    select n.name, a.played
    from acting_roles a
    join names n on (n.id = a.name_id)
    join principals p on (p.name_id = n.id and p.movie_id = a.movie_id)
    where a.movie_id = %s
    order by p.ordering, n.name
    """
    cursor.execute(get_actors, [movie_id])
    print("Starring")
    for row in cursor.fetchall():
      name, character = row
      print(f"{name} as {character}")
    get_crew = """
    select n.name, c.role
    from crew_roles c
    join names n on (n.id = c.name_id)
    join principals p on (p.name_id = n.id and p.movie_id = c.movie_id)
    where c.movie_id = %s
    order by p.ordering, n.name
    """
    cursor.execute(get_crew, [movie_id])
    print("and with")
    for row in cursor.fetchall():
      name, role = row
      print(f"{name}: {role}")
  else:
    print(f"Movies matching \'{title_regex}\'\n===============")
    for row in cursor.fetchall():
      _, title, year = row
      print(f"{title} ({year})")

except psycopg2.Error as err:
  print("DB error: ", err)
finally:
  if db:
    db.close()

